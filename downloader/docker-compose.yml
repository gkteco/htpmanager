version: "3.7"
services:

  traefik:
    hostname: traefik
    image: traefik:v1.7.16
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
      - default
      - traefik_proxy
    ports:
      - "80:80"
      - "443:443"
#      - "8082:8080"
    environment:
      - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
      - CF_API_KEY=${CLOUDFLARE_API_KEY}
      - PUID=${PUID}
      - PGID=${PGID}
    labels:
      - "traefik.enable=true"
      - "traefik.backend=traefik"
      - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
      #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=delesio.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=true"
      - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /mnt/storage/appdata/traefik/:/etc/traefik
  #      - /mnt/storage/appdata/docker/shared:/shared

########################################
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
#    command: --no-auth
    ports:
    - 9000:9000
    volumes:
    - /mnt/storage/appdata/portainer:/data
    - /var/run/docker.sock:/var/run/docker.sock
#    - shared:/shared
    restart:
      always
    environment:
    - TZ=${TZ}
    - PUID=${PUID}
    - PGID=${PGID}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=portainer"
      - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
      - "traefik.port=9000"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=delesio.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"
#    networks:
#      priv_lan:
#        ipv4_address: 10.0.0.22

########################################
  watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup

  motioneye:
    image: ccrisan/motioneye:master-amd64
    container_name: motioneye
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /etc/motioneye:/etc/motioneye
      - /mnt/storage/appdata/motioneye:/var/lib/motioneye
    #    network_mode: host
    #    networks:
    #      priv_lan:
    #        ipv4_address: 10.0.0.50
    restart: always
    ports:
      - 8765:8765
      - 8081:8081
      - 8082:8082

########################################
  netdata:
    image: netdata/netdata
    ports:
      - 19999:19999
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
#      - shared:/shared
      - /mnt/storage/appdata/netdata:/etc/netdata
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=netdata"
      - "traefik.frontend.rule=Host:netdata.${DOMAINNAME}"
      - "traefik.port=19999"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=delesio.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"
#    networks:
#      priv_lan:
#        ipv4_address: 10.0.0.23



########################################
#          downloader, indexers
########################################
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
    #why does sabnzbd need access to comics?
      # - comics:/comics
      - /mnt/storage/appdata/sabnzbd/config:/config
      - /mnt/storage/appdata/downloads/complete:/downloads
      - /mnt/storage/appdata/downloads/incomplete:/incomplete-downloads
#      - shared:/shared
    ports:
      - 8080:8080
      - 9090:9090
    restart: always
#    networks:
#      priv_lan:
#        ipv4_address: 10.0.0.24
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=sabnzbd"
      - "traefik.frontend.rule=Host:downloads.${DOMAINNAME}"
      - "traefik.port=8080"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=delesio.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"
########################################
  nzbhydra2:
    image: linuxserver/nzbhydra2
    container_name: nzbhydra2
    volumes:
      - /mnt/storage/appdata/hydra/config:/config
      - /mnt/storage/appdata/downloads/complete:/downloads
#      - shared:/shared
    ports:
      - 5076:5076
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - traefik_proxy
    labels:
      - "traefik.enable=true"
      - "traefik.backend=hydra2"
      - "traefik.frontend.rule=Host:search.${DOMAINNAME}"
      - "traefik.port=5076"
      - "traefik.docker.network=traefik_proxy"
      - "traefik.frontend.headers.SSLRedirect=true"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.browserXSSFilter=true"
      - "traefik.frontend.headers.contentTypeNosniff=true"
      - "traefik.frontend.headers.forceSTSHeader=true"
      - "traefik.frontend.headers.SSLHost=delesio.com"
      - "traefik.frontend.headers.STSIncludeSubdomains=true"
      - "traefik.frontend.headers.STSPreload=true"
      - "traefik.frontend.headers.frameDeny=false"
#    networks:
#      priv_lan:
#        ipv4_address: 10.0.0.25



  cloudflared:
    container_name: cloudflared
    # Restart on crashes and on reboots
    restart: unless-stopped
    image: cloudflare/cloudflared
    command: proxy-dns
    environment:
      - "TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query,https://9.9.9.9/dns-query,https://149.112.112.9/dns-query"

      # Listen on an unprivileged port
      - "TUNNEL_DNS_PORT=5053"

      # Listen on all interfaces
      - "TUNNEL_DNS_ADDRESS=0.0.0.0"

    # Attach cloudflared only to the private network
    networks:
      internal:
        ipv4_address: 172.30.9.2

  pihole:
    container_name: pihole
    restart: unless-stopped
    image: pihole/pihole
    environment:
      - "TZ=${TZ}"
      - "WEBPASSWORD=admin"

      # Internal IP of the cloudflared container
      - "DNS1=172.30.9.2#5053"

      # Explicitly disable a second DNS server, otherwise Pi-hole uses Google
      - "DNS2=no"
      - "DNSMASQ_LISTENING=all"

    # Persist data and custom configuration to the host's storage
    volumes:
      - /mnt/storage/appdata/pihole/config:/etc/pihole/
      - /mnt/storage/appdata/pihole/dnsmasq:/etc/dnsmasq.d/
    networks:
      internal:
        ipv4_address: 172.30.9.3
      priv_lan:
        ipv4_address: 10.0.0.26
    depends_on:
      - cloudflared

networks:
  internal:
    ipam:
      config:
        - subnet: 172.30.9.0/29
  priv_lan:
    driver: macvlan
    driver_opts:
      parent: enp2s0
    ipam:
      config:
        - subnet: 10.0.0.0/16
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge
