version: "3.7"
services:

########################################
#traefik - reverse proxy
########################################
  traefik:
    hostname: traefik
    image: traefik:v1.7.16
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
    - default
    - traefik_proxy
    ports:
    - "80:80"
    - "443:443"
    - "8082:8080"
    environment:
    - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
    - CF_API_KEY=${CLOUDFLARE_API_KEY}
    - PUID=${PUID}
    - PGID=${PGID}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=traefik"
    - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
    - "traefik.port=8080"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"
    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /mnt/storage/appdata/traefik:/etc/traefik
    - /mnt/storage/appdata/docker/shared:/shared

########################################
#portainer - docker manager
########################################
  portainer:
    image: portainer/portainer-ce
    container_name: portainer
#    command: --no-auth
#    ports:
#    - 9000:9000
    volumes:
    - /mnt/storage/appdata/portainer:/data
    - /var/run/docker.sock:/var/run/docker.sock
    - shared:/shared
    restart:
      always
    environment:
    - TZ=${TZ}
    - PUID=${PUID}
    - PGID=${PGID}
    networks:
    - traefik_proxy
    #    network_mode: host
    labels:
    - "traefik.enable=true"
    - "traefik.backend=portainer"
    - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /portainer"
    - "traefik.port=9000"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
  #    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

########################################
#oranizr
########################################
  organizr:
    container_name: organizr
    restart: always
    image: lsiocommunity/organizr
    volumes:
    - /mnt/storage/appdata//organizr:/config
    - shared:/shared
    #    ports:
    #      - "XXXX:80"
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=organizr"
    - "traefik.frontend.rule=Host:${DOMAINNAME}"
    - "traefik.port=80"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"

########################################
#sabnzbd - downloader
########################################
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
    #why does sabnzbd need access to comics?
      # - comics:/comics
      - /mnt/storage/appdata/sabnzbd/config:/config
      - /mnt/storage/appdata/downloads/complete:/downloads
      - /mnt/storage/appdata/downloads/incomplete:/incomplete-downloads
      - shared:/shared
    ports:
      - 8080:8080
      - 9090:9090
    restart: always
    networks:
    - traefik_proxy
      # vpn:
      #   ipv4_address: 172.20.0.2
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=sabnzbd"
    - "traefik.frontend.rule=Host:downloads.${DOMAINNAME}"
    - "traefik.port=8080"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

########################################
#nzbhydra - aggregates indxers
########################################
  nzbhydra:
    image: linuxserver/hydra
    container_name: hydra
    volumes:
      - /mnt/storage/appdata/hydra/config:/config
      - /mnt/storage/appdata/downloads/complete:/downloads
      - shared:/shared
#    ports:
#      - 5075:5075
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
    - traefik_proxy
      # vpn:
      #   ipv4_address: 172.20.0.1
    labels:
    - "traefik.enable=true"
    - "traefik.backend=hydra"
    - "traefik.frontend.rule=Host:hydra.${DOMAINNAME}"
    - "traefik.port=5075"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

########################################
#  #plex - media server
########################################
  plex:
    image: linuxserver/plex
    container_name: plex
    volumes:
      - /mnt/storage/appdata/plex:/config
      - /mnt/storage/media/tv:/data/tvshows
      - /mnt/storage/media/home_movies:/data/home_movies
      - /mnt/storage/media/photos:/data/photos
      - /mnt/storage/media/movies:/data/movies
      - /mnt/storage/media/christmas:/data/christmas
      - /mnt/storage/media/kids:/data/kids
      - /mnt/storage/media/4kmovies:/data/4kmovies
      - /mnt/storage/media/music:/data/music
      - /mnt/storage/tmp:/transcode
      - /mnt/storage/appdata/docker/shared:/shared
    network_mode: host
    # networks:
    #   plex_network:
    #      ipv4_address: 10.0.0.14
    restart: always
    ports:
      - 32400:32400/tcp
#      - 3005:3005/tcp
#      - 8324:8324/tcp
#      - 32469:32469/tcp
     # - 1900:1900/udp
#      - 32410:32410/udp
#      - 32412:32412/udp
#      - 32413:32413/udp
#      - 32414:32414/udp
    environment:
      - VERSION=public
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ADVERTISE_IP="http://10.0.0.10:32400/"
      - HOSTNAME="Docker Plex"
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ALLOWED_NETWORKS=10.0.0.0/8

########################################
#tautulli - plex stats
########################################
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    depends_on:
      - plex
    volumes:
      - /mnt/storage/appdata/plexpy:/config
      - /mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
      - shared:/shared
#    ports:
#      - 8181:8181
    links:
      - plex
    restart: always
    networks:
    - traefik_proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=tautulli"
    - "traefik.frontend.rule=Host:stats.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /tautulli"
    - "traefik.port=8181"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

########################################
#sonarr - tv downloader
########################################
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - sabnzbd
    volumes:
      - /mnt/storage/appdata/sonarr:/config
      - /mnt/storage/media/tv:/tv
      - /mnt/storage/appdata/downloads/complete:/downloads
      # - complete_downloads:/config/Downloads
      - shared:/shared
#       - /mnt/storage/media/tv_import:/tv_import
#    ports:
#      - 8989:8989
    links:
      - sabnzbd
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
    - traefik_proxy
      # vpn:
      #   ipv4_address: 172.20.0.4
    labels:
    - "traefik.enable=true"
    - "traefik.backend=sonarr"
    - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
    - "traefik.port=8989"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

########################################
#lazylibrarian - book/comic manager
########################################
  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
#    ports:
#      - 5299:5299
    volumes:
      - /mnt/storage/appdata/lazylibrarian:/config
      - /mnt/storage/appdata/downloads/complete:/downloads
      - /mnt/storage/media/books/ebooks:/books
      - shared:/shared
    restart:
      always
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    networks:
    - traefik_proxy
      # vpn:
      #   ipv4_address: 172.20.0.5
    labels:
    - "traefik.enable=true"
    - "traefik.backend=lazylibrarian"
    - "traefik.frontend.rule=Host:books.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /books"
    - "traefik.port=5299"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
#    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

########################################
#watchtower - docker image updater
########################################
  watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    networks:
    - traefik_proxy

########################################
#netdata - metrics for apps
########################################
  netdata:
    image: netdata/netdata
#    ports:
#      - 19999:19999
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - shared:/shared
      - /mnt/storage/appdata/netdata:/etc/netdata
    networks:
#    - default
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=netdata"
    - "traefik.frontend.rule=Host:netdata.${DOMAINNAME}"
    - "traefik.port=19999"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"


  radarr:
    image: linuxserver/radarr
    container_name: radarr
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    - UMASK_SET=022 #optional
    volumes:
    - /mnt/storage/appdata/radarr:/config
#    - movies:/movies
#    - complete_downloads:/downloads
    - /mnt/storage/media/movies:/movies
    - /mnt/storage/media/kids:/kids
    - /mnt/storage/media/christmas:/christmas
    - /mnt/storage/media/4kmovies:/4kmovies
    - /mnt/storage/appdata/downloads/complete:/downloads
    - shared:/shared
    ports:
    - 7878:7878
    restart: unless-stopped
    networks:
    - traefik_proxy
      # vpn:
      #   ipv4_address: 172.20.0.3
    labels:
    - "traefik.enable=true"
    - "traefik.backend=couchpotato"
    - "traefik.frontend.rule=Host:movies.${DOMAINNAME}"
    - "traefik.port=7878"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
  # network_testing:
  #   image: praqma/network-multitool
  #   networks:
  #     plex_network:
  #         ipv4_address: 10.0.0.13
  # cloudflared:
  #   container_name: cloudflared
  #   # Restart on crashes and on reboots
  #   restart: unless-stopped
  #   image: cloudflare/cloudflared
  #   command: proxy-dns
  #   environment:
  #     - "TUNNEL_DNS_UPSTREAM=https://1.1.1.1/dns-query,https://1.0.0.1/dns-query,https://9.9.9.9/dns-query,https://149.112.112.9/dns-query"
  #
  #     # Listen on an unprivileged port
  #     - "TUNNEL_DNS_PORT=5053"
  #
  #     # Listen on all interfaces
  #     - "TUNNEL_DNS_ADDRESS=0.0.0.0"
  #
  #   # Attach cloudflared only to the private network
  #   networks:
  #     internal:
  #       ipv4_address: 172.30.9.2
  #
  # pihole:
  #   container_name: pihole
  #   restart: unless-stopped
  #   image: pihole/pihole
  #   environment:
  #     - "TZ=${TZ}"
  #     - "WEBPASSWORD=admin"
  #
  #     # Internal IP of the cloudflared container
  #     - "DNS1=172.30.9.2#5053"
  #
  #     # Explicitly disable a second DNS server, otherwise Pi-hole uses Google
  #     - "DNS2=no"
  #
  #   # Persist data and custom configuration to the host's storage
  #   volumes:
  #     - '/mnt/storage/appdata/pihole/config:/etc/pihole/'
  #     - '/mnt/storage/appdata/pihole/dnsmasq:/etc/dnsmasq.d/'
  #   networks:
  #     internal:
  #       ipv4_address: 172.30.9.3
  #     priv_lan:
  #       ipv4_address: 10.0.0.11
  #   depends_on:
  #     - cloudflared







networks:
  # internal:
  #   ipam:
  #     config:
  #       - subnet: 172.30.9.0/29
  traefik_proxy:
    external:
      name: traefik_proxy
  # priv_lan:
  #   driver: macvlan
  #   driver_opts:
  #     parent: enp2s0
  #   ipam:
  #     config:
  #       - subnet: 10.0.0.0/16
  #         gateway: 10.0.0.1

  # vpn:
  #   driver: bridge
  #   ipam:
  #     driver: default
  #     config:
  #     - subnet: 172.20.0.0/16
  #       gateway: 0.0.0.0
  default:
    driver: bridge

volumes:
  comics:
    driver_opts:
      type: none
      device: /mnt/storage/media/comics
      o: bind
  tv:
    driver_opts:
      type: none
      device: /mnt/storage/media/tv
      o: bind
  home_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/homemovies
      o: bind
  photos:
    driver_opts:
      type: none
      device: /mnt/storage/media/photos
      o: bind
  movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/movies
      o: bind
  kids_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/kids
      o: bind
  christmas_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/christmas
      o: bind
  music:
    driver_opts:
      type: none
      device: /mnt/storage/media/music
      o: bind
  books:
    driver_opts:
      type: none
      device: /mnt/storage/media/books
      o: bind
  # complete_downloads:
  #   driver_opts:
  #     type: none
  #     device: /mnt/storage/appdata/downloads/complete
  #     o: bind
  # incomplete_downloads:
  #   driver_opts:
  #     type: none
  #     device: /mnt/storage/appdata/downloads/incomplete
  #     o: bind
  temp_storage:
    driver_opts:
      type: none
      device: /mnt/storage/tmp
      o: bind
  shared:
    driver_opts:
      type: none
      device: /mnt/storage/appdata/docker/shared
      o: bind



#/mnt/storage/appdata/heimdall/config:/config
#/mnt/storage/appdata/hydra/config:/config
#/mnt/storage/appdata/sabnzbd/config:/config
#/mnt/storage/appdata/plex:/config
#/mnt/storage/appdata/plexpy:/config
#/mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
#/mnt/storage/appdata/sonarr:/config
#/mnt/storage/appdata/letsencrypt:/config
#/mnt/storage/appdata/portainer:/data
#/mnt/storage/appdata/lazylibrarian:/config
#/mnt/storage/appdata/ubooquity:/config
#/mnt/storage/appdata/autosub:/config


#  docker run -d -p 8080:8080 -p 80:80 \
#  -v $PWD/traefik.toml:/etc/traefik/traefik.toml \
#  -v /var/run/docker.sock:/var/run/docker.sock \
#  traefik
