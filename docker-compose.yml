version: '2'
services:

#oranizr
  organizr:
    container_name: organizr
    restart: always
    image: lsiocommunity/organizr
    volumes:
    - /mnt/storage/appdata//organizr:/config
    - shared:/shared
    #    ports:
    #      - "XXXX:80"
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=organizr"
    - "traefik.frontend.rule=Host:${DOMAINNAME}"
    - "traefik.port=80"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"

#sabnzbd - downloader
  sabnzbd:
    image: linuxserver/sabnzbd
    container_name: sabnzbd
    volumes:
    #why does sabnzbd need access to comics?
      - comics:/comics
      - /mnt/storage/appdata/sabnzbd/config:/config
      - complete_downloads:/config/Downloads
      - incomplete_downloads:/config/incomplete
      - shared:/shared
#    ports:
#      - 8080:8080
#      - 9090:9090
    restart: always
    networks:
    - traefik_proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=sabnzbd"
    - "traefik.frontend.rule=Host:downloads.${DOMAINNAME}"
    - "traefik.port=8080"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

  #nzbhydra - aggregates indxers
  nzbhydra:
    image: linuxserver/hydra
    container_name: hydra
    volumes:
      - /mnt/storage/appdata/hydra/config:/config
      - complete_downloads:/downloads
      - shared:/shared
#    ports:
#      - 5075:5075
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ = ${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=hydra"
    - "traefik.frontend.rule=Host:hydra.${DOMAINNAME}"
    - "traefik.port=5075"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

#  #plex - media server
  plex:
    image: linuxserver/plex
    container_name: plex
    volumes:
      - /mnt/storage/appdata/plex:/config
      - tv:/data/tvshows
      - home_movies:/data/homemovies
      - photos:/data/photos
      - movies:/data/movies
      - christmas_movies:/data/christmas
      - kids_movies:/data/kids
      - music:/data/music
      - temp_storage:/transcode
      - shared:/shared
    network_mode: host
    restart: always
#    ports:
#      - 32400:32400/tcp
#      - 3005:3005/tcp
#      - 8324:8324/tcp
#      - 32469:32469/tcp
#      - 1900:1900/udp
#      - 32410:32410/udp
#      - 32412:32412/udp
#      - 32413:32413/udp
#      - 32414:32414/udp
    environment:
      - VERSION=public
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      - ADVERTISE_IP="http://10.0.0.10:32400/"
      - HOSTNAME="Docker Plex"
      - PLEX_CLAIM=${PLEX_CLAIM}
      - ALLOWED_NETWORKS=10.0.0.0/8

#tautulli - plex stats
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    depends_on:
      - plex
    volumes:
      - /mnt/storage/appdata/plexpy:/config
      - /mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
      - shared:/shared
#    ports:
#      - 8181:8181
    links:
      - plex
    restart: always
    networks:
    - traefik_proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=tautulli"
    - "traefik.frontend.rule=Host:stats.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /tautulli"
    - "traefik.port=8181"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

#sonarr - tv downloader
  sonarr:
    image: linuxserver/sonarr
    container_name: sonarr
    depends_on:
      - sabnzbd
    volumes:
      - /mnt/storage/appdata/sonarr:/config
      - tv:/tv
      - complete_downloads:/config/Downloads
      - shared:/shared
#       - /mnt/storage/media/tv_import:/tv_import
#    ports:
#      - 8989:8989
    links:
      - sabnzbd
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=sonarr"
    - "traefik.frontend.rule=Host:sonarr.${DOMAINNAME}"
    - "traefik.port=8989"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

  #portainer - docker manager
  portainer:
    image: portainer/portainer
    container_name: portainer
#    ports:
#      - 9000:9000
    volumes:
      - /mnt/storage/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - shared:/shared
    restart:
      always
    environment:
    - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=portainer"
    - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /portainer"
    - "traefik.port=9000"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
#    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

#lazylibrarian - book/comic manager
  lazylibrarian:
    image: linuxserver/lazylibrarian
    container_name: lazylibrarian
#    ports:
#      - 5299:5299
    volumes:
      - /mnt/storage/appdata/lazylibrarian:/config
      - complete_downloads:/downloads
      - books:/books
      - shared:/shared
    restart:
      always
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=lazylibrarian"
    - "traefik.frontend.rule=Host:books.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /books"
    - "traefik.port=5299"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
#    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

#watchtower - docker image updater
  watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup
    networks:
    - traefik_proxy

  #netdata - metrics for apps
  netdata:
    image: netdata/netdata
#    ports:
#      - 19999:19999
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - shared:/shared
      - /mnt/storage/appdata/netdata:/etc/netdata
    networks:
#    - default
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=netdata"
    - "traefik.frontend.rule=Host:netdata.${DOMAINNAME}"
    - "traefik.port=19999"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

  #ubooquity - manages comics
#  ubooquity:
#    image: linuxserver/ubooquity
#    container_name: ubooquity
##    ports:
##    - 2202:2202
##    - 2203:2203
#    volumes:
#    - /mnt/storage/appdata/ubooquity:/config
#    - complete_downloads:/files
#    - comics:/comics
#    - shared:/shared
#    restart:
#      always
#    environment:
#    - PUID=${PUID}
#    - PGID=${PGID}
#    - TZ=${TZ}
#    networks:
#    - traefik_proxy
#    labels:
#    - "traefik.enable=true"
#    - "traefik.backend=ubooquity"
#    - "traefik.frontend.rule=Host:comics.${DOMAINNAME}"
#    - "traefik.port=2202"
#    - "traefik.docker.network=traefik_proxy"
#    - "traefik.frontend.headers.SSLRedirect=true"
#    - "traefik.frontend.headers.STSSeconds=315360000"
#    - "traefik.frontend.headers.browserXSSFilter=true"
#    - "traefik.frontend.headers.contentTypeNosniff=true"
#    - "traefik.frontend.headers.forceSTSHeader=true"
#    - "traefik.frontend.headers.SSLHost=delesio.com"
#    - "traefik.frontend.headers.STSIncludeSubdomains=true"
#    - "traefik.frontend.headers.STSPreload=true"
#    - "traefik.frontend.headers.frameDeny=false"
#    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

#  #mylar - comic download
#  mylar:
#    image: linuxserver/mylar
#    container_name: mylar
##    ports:
##      - 8090:8090
#    volumes:
#      - /mnt/storage/appdata/mylay:/config
#      - complete_downloads:/downloads
#      - comics:/comics
#      - shared:/shared
#    environment:
#    - PUID=${PUID}
#    - PGID=${PGID}
#    - TZ=${TZ}
#    restart: always
#    networks:
#    - traefik_proxy
#    labels:
#    - "traefik.enable=true"
#    - "traefik.backend=mylar"
#    - "traefik.frontend.rule=Host:mylar.${DOMAINNAME}"
#    - "traefik.port=8090"
#    - "traefik.docker.network=traefik_proxy"
#    - "traefik.frontend.headers.SSLRedirect=true"
#    - "traefik.frontend.headers.STSSeconds=315360000"
#    - "traefik.frontend.headers.browserXSSFilter=true"
#    - "traefik.frontend.headers.contentTypeNosniff=true"
#    - "traefik.frontend.headers.forceSTSHeader=true"
#    - "traefik.frontend.headers.SSLHost=delesio.com"
#    - "traefik.frontend.headers.STSIncludeSubdomains=true"
#    - "traefik.frontend.headers.STSPreload=true"
#    - "traefik.frontend.headers.frameDeny=false"
#    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

#couchpotato - for movie downloads
  couchpotato:
    image: linuxserver/couchpotato
    container_name: couchpotato
#    ports:
#    - 5050:5050
    volumes:
    - /mnt/storage/appdata/couchpotato:/config
    - complete_downloads:/downloads
    - movies:/movies
    - shared:/shared
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    restart: always
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=couchpotato"
    - "traefik.frontend.rule=Host:movies.${DOMAINNAME}"
    - "traefik.port=5050"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

#    #plex integration with google home
  flex:
    container_name: flex
    image: digitalhigh/flextv
    restart: always
    volumes:
    - /mnt/storage/appdata/flex:/config
    - shared:/shared
    ports:
    - 5666:80
    - 5667:443
    environment:
    - HTTPPORT=5666
    - HTTPSPORT=5667
    - FASTCGIPORT=9000
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=flex"
    - "traefik.frontend.rule=Host:flex.${DOMAINNAME}"
    - "traefik.port=80"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

  unifi-video2:
    container_name: unifivideo2
    image: pducharme/unifi-video-controller
    network_mode: host
    restart: always
    volumes:
    - /mnt/storage/appdata/unfivideo2/config:/config
    - /mnt/storage/appdata/unfivideo2/data:/var/lib/unifi-video
    - /mnt/storage/appdata/unfivideo2/videos:/var/lib/unifi-video/videos
    cap_add:
    - SYS_ADMIN
    - DAC_READ_SEARCH
    security_opt:
    - apparmor:unconfined
    ports:
    - 10001:10001
    - 1935:1935
    - 7080:7080
    - 6666:6666
    - 7442:7442
    - 7443:7443
    - 7444:7444
    - 7445:7445
    - 7446:7446
    - 7447:7447

#  mopidy:
#    container_name: mopidy
#    restart: always
#    image: wernight/mopidy
#    volumes:
##    - /mnt/storage/appdata/mopidy:/var/lib/mopidy/media:ro
#    - /mnt/storage/appdata/mopidy:/var/lib/mopidy/local
#    ports:
#    - 6600:6600
#    - 6680:6680
#    devices:
#    - /dev/snd


#    #traefik - reverse proxy
  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
    - default
    - traefik_proxy
    ports:
    - "80:80"
    - "443:443"
    - "8082:8080"
    environment:
    - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
    - CF_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=traefik"
    - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
    - "traefik.port=8080"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"
    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /mnt/storage/appdata/traefik:/etc/traefik
    - /mnt/storage/appdata/docker/shared:/shared

  homeassistant:
    image: homeassistant/home-assistant
    container_name: homeassistant
    networks:
    - default
    ports:
    - 8123:8123
    - 8300:8300
    volumes:
    - /mnt/storage/appdata/homeassistant/config:/config
    - /mnt/storage/appdata/homeassistant/app:/usr/src/app





networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

volumes:
  comics:
    driver_opts:
      type: none
      device: /mnt/storage/media/comics
      o: bind
  tv:
    driver_opts:
      type: none
      device: /mnt/storage/media/tv
      o: bind
  home_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/homemovies
      o: bind
  photos:
    driver_opts:
      type: none
      device: /mnt/storage/media/photos
      o: bind
  movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/movies
      o: bind
  kids_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/kids
      o: bind
  christmas_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/christmas
      o: bind
  music:
    driver_opts:
      type: none
      device: /mnt/storage/media/music
      o: bind
  books:
    driver_opts:
      type: none
      device: /mnt/storage/media/books
      o: bind
  complete_downloads:
    driver_opts:
      type: none
      device: /mnt/storage/downloads/complete
      o: bind
  incomplete_downloads:
    driver_opts:
      type: none
      device: /mnt/storage/downloads/incomplete
      o: bind
  temp_storage:
    driver_opts:
      type: none
      device: /mnt/storage/tmp
      o: bind
  shared:
    driver_opts:
      type: none
      device: /mnt/storage/appdata/docker/shared
      o: bind


      
#/mnt/storage/appdata/heimdall/config:/config
#/mnt/storage/appdata/hydra/config:/config
#/mnt/storage/appdata/sabnzbd/config:/config
#/mnt/storage/appdata/plex:/config
#/mnt/storage/appdata/plexpy:/config
#/mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
#/mnt/storage/appdata/sonarr:/config
#/mnt/storage/appdata/letsencrypt:/config
#/mnt/storage/appdata/portainer:/data
#/mnt/storage/appdata/lazylibrarian:/config
#/mnt/storage/appdata/ubooquity:/config
#/mnt/storage/appdata/autosub:/config
  

#  docker run -d -p 8080:8080 -p 80:80 \
#  -v $PWD/traefik.toml:/etc/traefik/traefik.toml \
#  -v /var/run/docker.sock:/var/run/docker.sock \
#  traefik
