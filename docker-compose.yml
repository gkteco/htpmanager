version: '2'
services:
  #heimdall - gateway, manager
  heimdall:
    image: linuxserver/heimdall
    container_name: heimdall
    volumes:
      - /mnt/storage/appdata/heimdall/config:/config
      - shared:/shared
#    ports:
#      - 80:80
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
    - traefik_proxy
#  #sabnzbd - downloader
#  sabnzbd:
#    image: linuxserver/sabnzbd
#    container_name: sabnzbd
#    volumes:
#    #why does sabnzbd need access to comics?
#      - comics:/comics
#      - /mnt/storage/appdata/sabnzbd/config:/config
#      - complete_downloads:/config/Downloads
#      - incomplete_downloads:/config/incomplete
#    ports:
#      - 8080:8080
#      - 9090:9090
#    restart: always
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=America/New_York
#  #nzbhydra - aggregates indxers
#  nzbhydra:
#    image: linuxserver/hydra
#    container_name: hydra
#    volumes:
#      - /mnt/storage/appdata/hydra/config:/config
#      - complete_downloads:/downloads
#    ports:
#      - 5075:5075
#    restart: always
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#  #plex - media server
  plex:
    image: linuxserver/plex
    container_name: plex
    volumes:
      - /mnt/storage/appdata/plex:/config
      - tv:/data/tvshows
      - home_movies:/data/homemovies
      - photos:/data/photos
      - movies:/data/movies
      - christmas_movies:/data/christmas
      - kids_movies:/data/kids
      - music:/data/music
      - temp_storage:/transcode
      - shared:/shared
#    network_mode: host
    restart: always
    environment:
      - VERSION=public
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=plexms"
    - "traefik.frontend.rule=Host:plex.${DOMAINNAME}"
    - "traefik.port=32400"
    - "traefik.protocol=http"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=example.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"

#  #tautulli - plex stats
#  tautulli:
#    image: linuxserver/tautulli
#    container_name: tautulli
#    depends_on:
#      - plex
#    volumes:
#      - /mnt/storage/appdata/plexpy:/config
#      - /mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
#    ports:
#      - 8181:8181
#    links:
#      - plex
#    restart: always
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
#      - TZ=America/New_York
#  #sonarr - tv downloader
#  sonarr:
#    image: linuxserver/sonarr
#    container_name: sonarr
#    depends_on:
#      - sabnzbd
#    volumes:
#      - /mnt/storage/appdata/sonarr:/config
#      - tv:/tv
#      - complete_downloads:/config/Downloads
##       - /mnt/storage/media/tv_import:/tv_import
#    ports:
#      - 8989:8989
#    links:
#      - sabnzbd
#    restart: always
#    environment:
#      - PUID=${PUID}
#      - PGID=${PGID}
  #portainer - docker manager
  portainer:
    image: portainer/portainer
    container_name: portainer
#    ports:
#      - 9000:9000
    volumes:
      - /mnt/storage/appdata/portainer:/data
      - /var/run/docker.sock:/var/run/docker.sock
      - shared:/shared
    restart:
      always
    environment:
    - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=portainer"
    - "traefik.frontend.rule=Host:portainer.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /portainer"
    - "traefik.port=9000"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=example.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"

#  #lazylibrarian - book/comic manager
#  lazylibrarian:
#    image: linuxserver/lazylibrarian
#    container_name: lazylibrarian
#    ports:
#      - 5299:5299
#    volumes:
#      - /mnt/storage/appdata/lazylibrarian:/config
#      - complete_downloads:/downloads
#      - books:/books
#    restart:
#      always
#    environment:
#      - TZ=America/New_York
#      - PUID=${PUID}
#      - PGID=${PGID}
#  #watchtower - docker image updater
#  watchtower:
#    container_name: watchtower
#    restart: always
#    image: v2tec/watchtower
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
##    command: --schedule "0 0 4 * * *" --cleanup
#  #netdata - metrics for apps
#  netdata:
#    image: netdata/netdata
#    ports:
#      - 19999:19999
#    cap_add:
#      - SYS_PTRACE
#    security_opt:
#      - apparmor:unconfined
#    volumes:
#      - /proc:/host/proc:ro
#      - /sys:/host/sys:ro
#      - /var/run/docker.sock:/var/run/docker.sock:ro
#  #ubooquity - manages comics
#  ubooquity:
#    image: linuxserver/ubooquity
#    container_name: ubooquity
#    ports:
#    - 2202:2202
#    - 2203:2203
#    volumes:
#    - /mnt/storage/appdata/ubooquity:/config
#    - complete_downloads:/files
#    - comics:/comics
#    restart:
#      always
#    environment:
#    - PUID=${PUID}
#    - PGID=${PGID}
#  #mylar - comic download
#  mylar:
#    image: linuxserver/mylar
#    container_name: mylar
#    ports:
#      - 8090:8090
#    volumes:
#      - /mnt/storage/appdata/mylay:/config
#      - complete_downloads:/downloads
#      - comics:/comics
#    environment:
#    - PUID=${PUID}
#    - PGID=${PGID}
#    - TZ=America/New_York
#  #headphones
#  headphones:
#    image: linuxserver/headphones
#    container_name: headphones
#    ports:
#    - 8182:8181
#    volumes:
#    - /mnt/storage/appdata/headphones:/config
#    - complete_downloads:/downloads
#    - music:/music
#    environment:
#    - PUID=${PUID}
#    - PGID=${PGID}
#    - TZ=America/New_York
#    #couchpotato - for movie downloads
#  couchpotato:
#    image: linuxserver/couchpotato
#    container_name: couchpotato
#    ports:
#    - 5050:5050
#    volumes:
#    - /mnt/storage/appdata/couchpotato:/config
#    - complete_downloads:/downloads
#    - movies:/movies
#    environment:
#    - PUID=${PUID}
#    - PGID=${PGID}
#    - TZ=America/New_York
#    #plex integration with google home
#  phlex:
#    container_name: phlex
#    image: digitalhigh/phlex
#    volumes:
#    - /mnt/storage/appdata/phlex:/config
#    ports:
#    - 5666:80
#    - 5667:443
#    environment:
#    - HTTPPORT=5666
#    - HTTPSPORT=5667
#    - FASTCGIPORT=9000
#  unifi-video2:
#    container_name: unifivideo2
#    image: pducharme/unifi-video-controller
#    network_mode: host
#    volumes:
#    - /mnt/storage/appdata/unfivideo2:/config
#    cap_add:
#    - SYS_ADMIN
#    - DAC_READ_SEARCH
#    security_opt:
#    - apparmor:unconfined
#    ports:
#    - 10001:10001
#    - 1935:1935
#    - 7080:7080
#    - 6666:6666
#    - 7442:7442
#    - 7443:7443
#    - 7444:7444
#    - 7445:7445
#    - 7446:7446
#    - 7447:7447
#    #traefik - reverse proxy
  traefik:
    hostname: traefik
    image: traefik:latest
    container_name: traefik
    restart: always
    domainname: ${DOMAINNAME}
    networks:
    - default
    - traefik_proxy
    ports:
    - "80:80"
    - "443:443"
    - "8081:8080"
    environment:
    - CF_API_EMAIL=${CLOUDFLARE_EMAIL}
    - CF_API_KEY=${CLOUDFLARE_API_KEY}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=traefik"
    - "traefik.frontend.rule=Host:traefik.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefixStrip: /traefik"
    - "traefik.port=8080"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=example.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=true"
#    - "traefik.frontend.auth.basic.users=tim:rage311"
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock:ro
    - /mnt/storage/appdata/docker/htpmanager/traefik:/etc/traefik
    - /mnt/storage/appdata/docker/shared:/shared


networks:
  traefik_proxy:
    external:
      name: traefik_proxy
  default:
    driver: bridge

volumes:
  comics:
    driver_opts:
      type: none
      device: /mnt/storage/media/comics
      o: bind
  tv:
    driver_opts:
      type: none
      device: /mnt/storage/media/tv
      o: bind
  home_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/homemovies
      o: bind
  photos:
    driver_opts:
      type: none
      device: /mnt/storage/media/photos
      o: bind
  movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/movies
      o: bind
  kids_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/kids
      o: bind
  christmas_movies:
    driver_opts:
      type: none
      device: /mnt/storage/media/christmas
      o: bind
  music:
    driver_opts:
      type: none
      device: /mnt/storage/media/music
      o: bind
  books:
    driver_opts:
      type: none
      device: /mnt/storage/media/books
      o: bind
  complete_downloads:
    driver_opts:
      type: none
      device: /mnt/storage/downloads/complete
      o: bind
  incomplete_downloads:
    driver_opts:
      type: none
      device: /mnt/storage/downloads/incomplete
      o: bind
  temp_storage:
    driver_opts:
      type: none
      device: /mnt/storage/tmp
      o: bind
  shared:
    driver_opts:
      type: none
      device: /mnt/storage/appdata/docker/shared
      o: bind


      
#/mnt/storage/appdata/heimdall/config:/config
#/mnt/storage/appdata/hydra/config:/config
#/mnt/storage/appdata/sabnzbd/config:/config
#/mnt/storage/appdata/plex:/config
#/mnt/storage/appdata/plexpy:/config
#/mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
#/mnt/storage/appdata/sonarr:/config
#/mnt/storage/appdata/letsencrypt:/config
#/mnt/storage/appdata/portainer:/data
#/mnt/storage/appdata/lazylibrarian:/config
#/mnt/storage/appdata/ubooquity:/config
#/mnt/storage/appdata/autosub:/config
  

#  docker run -d -p 8080:8080 -p 80:80 \
#  -v $PWD/traefik.toml:/etc/traefik/traefik.toml \
#  -v /var/run/docker.sock:/var/run/docker.sock \
#  traefik
