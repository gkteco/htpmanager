version: '2'
services:
  heimdall - gateway, manager

    #plex integration with google home
  flex:
    container_name: flex
    image: digitalhigh/flextv
    restart: always
    volumes:
    - /mnt/storage/appdata/flex:/config
    - shared:/shared
    ports:
    - 5666:80
    - 5667:443
    environment:
    - HTTPPORT=5666
    - HTTPSPORT=5667
    - FASTCGIPORT=9000
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=flex"
    - "traefik.frontend.rule=Host:flex.${DOMAINNAME}"
    - "traefik.port=80"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

  spotifyd:
    image: ggoussard/spotifyd
    image: spotifyd:local
    image: vace117/spotify-connect-server
    network_mode: "host"
    devices:
    - /dev/snd:/dev/snd
    volumes:
    - /usr/share/alsa:/usr/share/alsa
    - /mnt/storage/appdata/spotifyd/root:/root
    - /dev/shm:/dev/shm
    - /etc:/etc
    - $XDG_RUNTIME_DIR/pulse:$XDG_RUNTIME_DIR/pulse
    environment:
    - TZ=${TZ}
    - PULSE_SERVER=unix:$XDG_RUNTIME_DIR/pulse/native
    - DEVICE_NAME=docker

#######################################
#tautulli - plex stats
#######################################
  tautulli:
    image: linuxserver/tautulli
    container_name: tautulli
    depends_on:
      - plex
    volumes:
      - /mnt/storage/appdata/plexpy:/config
      - /mnt/storage/appdata/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/logs:ro
      - shared:/shared
#    ports:
#      - 8181:8181
    links:
      - plex
    restart: always
    networks:
    - traefik_proxy
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    labels:
    - "traefik.enable=true"
    - "traefik.backend=tautulli"
    - "traefik.frontend.rule=Host:stats.${DOMAINNAME}"
    #      - "traefik.frontend.rule=Host:${DOMAINNAME}; PathPrefix: /tautulli"
    - "traefik.port=8181"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

  unifi-video2:
    container_name: unifivideo2
    image: pducharme/unifi-video-controller
    network_mode: host
    restart: always
    volumes:
    - /mnt/storage/appdata/unfivideo2/config:/config
    - /mnt/storage/appdata/unfivideo2/data:/var/lib/unifi-video
    - /mnt/storage/appdata/unfivideo2/videos:/var/lib/unifi-video/videos
    cap_add:
    - SYS_ADMIN
    - DAC_READ_SEARCH
    security_opt:
    - apparmor:unconfined
    ports:
    - 10001:10001
    - 1935:1935
    - 7080:7080
    - 6666:6666
    - 7442:7442
    - 7443:7443
    - 7444:7444
    - 7445:7445
    - 7446:7446
    - 7447:7447

ubooquity - manages comics
  ubooquity:
    image: linuxserver/ubooquity
    container_name: ubooquity
#    ports:
#    - 2202:2202
#    - 2203:2203
    volumes:
    - /mnt/storage/appdata/ubooquity:/config
    - complete_downloads:/files
    - comics:/comics
    - shared:/shared
    restart:
      always
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=ubooquity"
    - "traefik.frontend.rule=Host:comics.${DOMAINNAME}"
    - "traefik.port=2202"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

  #mylar - comic download
  mylar:
    image: linuxserver/mylar
    container_name: mylar
#    ports:
#      - 8090:8090
    volumes:
      - /mnt/storage/appdata/mylay:/config
      - complete_downloads:/downloads
      - comics:/comics
      - shared:/shared
    environment:
    - PUID=${PUID}
    - PGID=${PGID}
    - TZ=${TZ}
    restart: always
    networks:
    - traefik_proxy
    labels:
    - "traefik.enable=true"
    - "traefik.backend=mylar"
    - "traefik.frontend.rule=Host:mylar.${DOMAINNAME}"
    - "traefik.port=8090"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"
    - "traefik.frontend.auth.basic.users=${HTTP_USERNAME}:${HTTP_PASSWORD}"

heimdall:
  image: linuxserver/heimdall
  container_name: heimdall
  volumes:
  - /mnt/storage/appdata/heimdall/config:/config
  - shared:/shared
  #    ports:
  #      - 80:80
  restart: always
  environment:
  - PUID=${PUID}
  - PGID=${PGID}
  - TZ=${TZ}
  networks:
  - traefik_proxy
  labels:
  - "traefik.enable=true"
  - "traefik.backend=heimdall"
  - "traefik.frontend.rule=Host:home.${DOMAINNAME}"
  - "traefik.port=80"
  - "traefik.protocol=http"
  - "traefik.docker.network=traefik_proxy"
  - "traefik.frontend.headers.SSLRedirect=true"
  - "traefik.frontend.headers.STSSeconds=315360000"
  - "traefik.frontend.headers.browserXSSFilter=true"
  - "traefik.frontend.headers.contentTypeNosniff=true"
  - "traefik.frontend.headers.forceSTSHeader=true"
  - "traefik.frontend.headers.SSLHost=example.com"
  - "traefik.frontend.headers.STSIncludeSubdomains=true"
  - "traefik.frontend.headers.STSPreload=true"
  - "traefik.frontend.headers.frameDeny=true"

    headphones:
      image: linuxserver/headphones
      container_name: headphones
      ports:
      - 8182:8181
      volumes:
      - /mnt/storage/appdata/headphones:/config
      - complete_downloads:/downloads
      - music:/music
      environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/New_York
  htpcmanager:
    container_name: htpcmanager
    image: linuxserver/htpcmanager
    ports:
      - 8085:8085
    environment:
      - TZ=America/New_York
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/storage/appdata/htpmanager:/config
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - /mnt/storage/appdata/radarr:/config
      - /mnt/storage/media/movies:/movies
      - /mnt/storage/media/downloads:/downloads
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    restart:
      always

#######################################
nzbhydra - aggregates indxers
#######################################
  nzbhydra:
    image: linuxserver/hydra
    container_name: hydra
    volumes:
      - /mnt/storage/appdata/hydra1_bak/config:/config
      - /mnt/storage/appdata/downloads/complete:/downloads
      - shared:/shared
    ports:
      - 5075:5075
    restart: always
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
    - traefik_proxy
      vpn:
        ipv4_address: 172.20.0.1
    labels:
    - "traefik.enable=true"
    - "traefik.backend=hydra"
    - "traefik.frontend.rule=Host:hydra.${DOMAINNAME}"
    - "traefik.port=5075"
    - "traefik.docker.network=traefik_proxy"
    - "traefik.frontend.headers.SSLRedirect=true"
    - "traefik.frontend.headers.STSSeconds=315360000"
    - "traefik.frontend.headers.browserXSSFilter=true"
    - "traefik.frontend.headers.contentTypeNosniff=true"
    - "traefik.frontend.headers.forceSTSHeader=true"
    - "traefik.frontend.headers.SSLHost=delesio.com"
    - "traefik.frontend.headers.STSIncludeSubdomains=true"
    - "traefik.frontend.headers.STSPreload=true"
    - "traefik.frontend.headers.frameDeny=false"

#######################################
nzbhydra - aggregates indxers
#######################################

  syncloung_server:
    image: starbix/synclounge:nginx
    container_name: plextogether_nginx
    ports:
    - 8087:80
  synclounge:
    image: starbix/synclounge
    container_name: synclounge
    ports:
    - 8088:8088
    - 8089:8089
  #autosub - subtitle downloader
  autosub:
    image: ltka/autosub
    container_name: autosub
    volumes:
    - /mnt/storage/appdata/autosub:/config
    - movies:/tv
    environment:
    - TZ=America/New_York
    - PUID=${PUID}
    - PGID=${PGID}
    restart: always
    ports:
    - 9960:9960
    depends_on:
    - plex
    links:
    - plex
    diskover:
      image: linuxserver/diskover
      container_name: diskover
      environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASS=changeme
      - RUN_ON_START=true
      - USE_CRON=true
      volumes:
      - /mnt/storage/appdata/diskover:/config
      - /mnt/storage/media:/data
      ports:
      - 80:80
      - 9181:9181
      - 9999:9999
      mem_limit: 4096m
      restart: unless-stopped
      depends_on:
      - elasticsearch
      - redis
    elasticsearch:
      container_name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
      volumes:
      - /mnt/storage/appdata/elasticsearch/data:/usr/share/elasticsearch/data
      environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
    redis:
      container_name: redis
      image: redis:alpine
      volumes:
    home-assistant:
      container_name: home-assistant
      image: homeassistant/home-assistant
      ports:
      - 8123:8123
      volumes:
      - /mnt/storage/appdata/homeassist:/config
      - /etc/localtime:/etc/localtime:ro
  environment:
  - PUID=${PUID}
  - PGID=${PGID}
  - TZ=America/New_York

#TO-DO
#  docker pull linuxserver/qbittorrent
#  docker pull pihole/pihole

  docker run --restart=always -d -p 80:80 \
  --hostname=spotweb \
  --name=spotweb \
  -v <hostdir_where_config_will_persistently_be_stored>:/config \
  -e TZ='Europe/Amsterdam' \
  -e SPOTWEB_DB_TYPE=pdo_mysql \
  -e SPOTWEB_DB_HOST=<database_server_hostname> \
  -e SPOTWEB_DB_NAME=spotweb \
  -e SPOTWEB_DB_USER=spotweb \
  -e SPOTWEB_DB_PASS=spotweb \
  jgeusebroek/spotweb
