version: '2'
services:
  heimdall - gateway, manager
heimdall:
  image: linuxserver/heimdall
  container_name: heimdall
  volumes:
  - /mnt/storage/appdata/heimdall/config:/config
  - shared:/shared
  #    ports:
  #      - 80:80
  restart: always
  environment:
  - PUID=${PUID}
  - PGID=${PGID}
  - TZ=${TZ}
  networks:
  - traefik_proxy
  labels:
  - "traefik.enable=true"
  - "traefik.backend=heimdall"
  - "traefik.frontend.rule=Host:home.${DOMAINNAME}"
  - "traefik.port=80"
  - "traefik.protocol=http"
  - "traefik.docker.network=traefik_proxy"
  - "traefik.frontend.headers.SSLRedirect=true"
  - "traefik.frontend.headers.STSSeconds=315360000"
  - "traefik.frontend.headers.browserXSSFilter=true"
  - "traefik.frontend.headers.contentTypeNosniff=true"
  - "traefik.frontend.headers.forceSTSHeader=true"
  - "traefik.frontend.headers.SSLHost=example.com"
  - "traefik.frontend.headers.STSIncludeSubdomains=true"
  - "traefik.frontend.headers.STSPreload=true"
  - "traefik.frontend.headers.frameDeny=true"

    headphones:
      image: linuxserver/headphones
      container_name: headphones
      ports:
      - 8182:8181
      volumes:
      - /mnt/storage/appdata/headphones:/config
      - complete_downloads:/downloads
      - music:/music
      environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=America/New_York
  htpcmanager:
    container_name: htpcmanager
    image: linuxserver/htpcmanager
    ports:
      - 8085:8085
    environment:
      - TZ=America/New_York
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - /mnt/storage/appdata/htpmanager:/config
  radarr:
    image: linuxserver/radarr
    container_name: radarr
    volumes:
      - /mnt/storage/appdata/radarr:/config
      - /mnt/storage/media/movies:/movies
      - /mnt/storage/media/downloads:/downloads
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
    restart:
      always
  letsencrypt:
    image: linuxserver/letsencrypt
    container_name: letsencrypt
    ports:
      - 443:443
    volumes:
      - /mnt/storage/appdata/letsencrypt:/config
    restart:
      always
    environment:
      - VALIDATION=dns
      - PUID=${PUID}
      - PGID=${PGID}
      - EMAIL=bfrost@brainboy.com
      - URL=brainboy.com
      - SUBDOMAINS=wildcard
      - ONLY_SUBDOMAINS=false
      - DNSPLUGIN=tls-sni
      - DHLEVEL=4096
      - TZ=America/New_York
  syncloung_server:
    image: starbix/synclounge:nginx
    container_name: plextogether_nginx
    ports:
    - 8087:80
  synclounge:
    image: starbix/synclounge
    container_name: synclounge
    ports:
    - 8088:8088
    - 8089:8089
  #autosub - subtitle downloader
  autosub:
    image: ltka/autosub
    container_name: autosub
    volumes:
    - /mnt/storage/appdata/autosub:/config
    - movies:/tv
    environment:
    - TZ=America/New_York
    - PUID=${PUID}
    - PGID=${PGID}
    restart: always
    ports:
    - 9960:9960
    depends_on:
    - plex
    links:
    - plex
    diskover:
      image: linuxserver/diskover
      container_name: diskover
      environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/New_York
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - ES_HOST=elasticsearch
      - ES_PORT=9200
      - ES_USER=elastic
      - ES_PASS=changeme
      - RUN_ON_START=true
      - USE_CRON=true
      volumes:
      - /mnt/storage/appdata/diskover:/config
      - /mnt/storage/media:/data
      ports:
      - 80:80
      - 9181:9181
      - 9999:9999
      mem_limit: 4096m
      restart: unless-stopped
      depends_on:
      - elasticsearch
      - redis
    elasticsearch:
      container_name: elasticsearch
      image: docker.elastic.co/elasticsearch/elasticsearch:5.6.9
      volumes:
      - /mnt/storage/appdata/elasticsearch/data:/usr/share/elasticsearch/data
      environment:
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms2048m -Xmx2048m"
      ulimits:
        memlock:
          soft: -1
          hard: -1
    redis:
      container_name: redis
      image: redis:alpine
      volumes:
    home-assistant:
      container_name: home-assistant
      image: homeassistant/home-assistant
      ports:
      - 8123:8123
      volumes:
      - /mnt/storage/appdata/homeassist:/config
      - /etc/localtime:/etc/localtime:ro
  environment:
  - PUID=${PUID}
  - PGID=${PGID}
  - TZ=America/New_York

#TO-DO
#  docker pull linuxserver/qbittorrent
#  docker pull pihole/pihole

  docker run --restart=always -d -p 80:80 \
  --hostname=spotweb \
  --name=spotweb \
  -v <hostdir_where_config_will_persistently_be_stored>:/config \
  -e TZ='Europe/Amsterdam' \
  -e SPOTWEB_DB_TYPE=pdo_mysql \
  -e SPOTWEB_DB_HOST=<database_server_hostname> \
  -e SPOTWEB_DB_NAME=spotweb \
  -e SPOTWEB_DB_USER=spotweb \
  -e SPOTWEB_DB_PASS=spotweb \
  jgeusebroek/spotweb

